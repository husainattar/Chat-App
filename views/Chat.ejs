<link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/css/bootstrap.min.css" integrity="sha384-Vkoo8x4CGsO3+Hhxv8T/Q5PaXtkKtu6ug5TOeNV6gBiFeWPGFN9MuhOf23Q9Ifjh" crossorigin="anonymous">
<style>
    .MessageBox{
        margin-top:10%;
        margin-left:20%;
        margin-right:20%
    }
    .people{
       margin-left:2%;
    }
</style>
<div class="people"><h2>People</h2></div>
<br>
<div id="List"></div>

<div class="MessageBox">
    <div class="container">
        <ol id="msgs"></ol>
  <form>
  <div class="form-group">
  <input type="email" class="form-control" id="exampleInputEmail1" aria-describedby="emailHelp" placeholder="Message">
  </div>
  <button type="submit" class="btn btn-primary" id="submit">Send</button>
  <button type="submit" class="btn btn-primary" id="submitLoc">Send Location</button>
</form>
</div>
</div>



<!--Main package to include at client side to communicate with server within socket-->

<script src="/socket.io/socket.io.js"></script>

<!--Jquery included-->
<script
  src="https://code.jquery.com/jquery-3.4.1.min.js"
  integrity="sha256-CSXorXvZcTkaix6Yvo6HppcZGetbYMGWSFlBw8HfCJo="
  crossorigin="anonymous"></script>

<script>
var socket=io();//method to initialized socket at the client

socket.on('connect',function(){ //main methodwhen client joins the server.(predefined one).
   var user={
       name :"<%= user.name %>",
       room :"<%= user.room %>"
   }
   console.log(user);
   socket.emit("join",user);
   console.log("User connected on client");
});


//Below are on() and emit() method to listen and send messages to server and communicates using same title/messsage/tag.

socket.on("List",function(users){
    var ol=$('<ol></ol>');
   console.log(users);
    users.forEach(function(user){
        ol.append($('<li></li>').text(user));
    });
  console.log(users);
    $("#List").html(ol);
});

socket.on("Welcome",function(data){
    alert(data);
});

socket.on("New",function(data){
    alert(data);
});

//sends Messages to server and then to chat area to every client joined the room
$("#submit").click(function(e){

   e.preventDefault();
   var message=$("#exampleInputEmail1").val();
   socket.emit("createMessage",message);
   $("#exampleInputEmail1").val("");
});

socket.on("showMessage",function(data){
    var li=$('<li></li>');
    li.text(data);
    $("#msgs").append(li);
});


//Sends Location to server and then to chat area to every client joined the room

$("#submitLoc").click(function(e){
   e.preventDefault();
    geoLocation();
});

socket.on("showPos",function(position){
    var li=$('<li></li>');
    var a=$('<a target="_blank" > My Current Location</a>');
    console.log(position);
    const latitude  = position.lat;
    const longitude = position.long;
    a.attr('href',`https://www.openstreetmap.org/#map=18/${latitude}/${longitude}`)
    li.text(position.name+"  Location is:");
    li.append(a);
    $("#msgs").append(li);
    document.querySelector('#submitLoc').textContent = 'Send Location';
});


function geoLocation() {

  const status = document.querySelector('#submitLoc');

  function success(position) {
  pos={
      lat:position.coords.latitude,
      long:position.coords.longitude
  };
    socket.emit("createLoc",pos);
  }
  function error() {
    status.textContent = 'Unable to retrieve your location';
  }

  if (!navigator.geolocation) {
    status.textContent = 'Geolocation is not supported by your browser';
  } else {
    status.textContent = 'Sendingâ€¦.';
    navigator.geolocation.getCurrentPosition(success, error);
  }

}


socket.on('disconnect',function(){//main method when client diconnects from  the server or server goes down.(predefined one).
    console.log("Disconnected-from-server")
})

</script>
